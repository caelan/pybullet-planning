#!/usr/bin/env python

from __future__ import print_function

import os, shutil, sys

from distutils.core import setup, Extension

# Build C++ extension by running: 'python setup.py build'
# see: https://docs.python.org/3/extending/building.html

# lib name template: 'ikfast_<robot name>'
IKFAST = 'ikfast_kuka_kr6r900'
LIBRARY_TEMPLATE = '{}.so'

ikfast_module = Extension(IKFAST, sources=['ikfast.cpp'])

setup(name=IKFAST,
      version='1.0',
      description="ikfast module for KUKA kr6r900.",
      ext_modules=[ikfast_module])

## legacy built files clean-up
# get the built C++ library 'ikfast_x.so'
# and clean them up
ikfast_cpplib = LIBRARY_TEMPLATE.format(IKFAST)
ikfast_cwd = os.getcwd()

ikfast_cpplib_path = None
for dirpath, _, filenames in os.walk(os.getcwd()):
    if ikfast_cpplib in filenames:
        ikfast_cpplib_path = os.path.join(dirpath, ikfast_cpplib)

ikfast_target = os.path.join(ikfast_cwd, ikfast_cpplib)

ik_files = os.listdir(ikfast_cwd)
if ikfast_cpplib in ik_files:
	os.remove(ikfast_target)

os.rename(ikfast_cpplib_path, ikfast_target)

# delete 'build' subfolder generated by the C++ module build process
build_folder = os.path.join(os.getcwd(), 'build')
shutil.rmtree(build_folder)
## end built files clean-up

try:
    import ikfast_kuka_kr6r900
    print('\nikfast module %s imported successful'%(IKFAST))
except ImportError as e:
    print('\nikfast module %s imported failed'%(IKFAST))
    raise e